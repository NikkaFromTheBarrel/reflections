How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By the deletion (-) of a word to another addition (+)

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It gives you a clean and neat workspace, wihtout loosing the overview of
    your versions.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It makes the history more clear, because you see commits for each logical change.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because one change in one file can be also relevant for another file.
    This way you see the dependencies between files and the change.

How can you use the commands git log and git diff to view the history of files?

    With git log I can identify a certain commit by viewing the added messages and then I can use git diff to see changes made between two commits.

How might using version control make you more confident to make changes that
could break something?

    With version control I can make changes that could break something because I can always go back to a previous version to revert the changes.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to try creating a repository and apply commits to it.
